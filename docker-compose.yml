services:
  # PostgreSQL Database - Core data storage
  postgres:
    image: postgres:15-alpine
    container_name: tutuni_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tutuni_ai
      POSTGRES_USER: tutuni_user
      POSTGRES_PASSWORD: tutuni_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tutuni_user -d tutuni_ai"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - tutuni_network

  # Redis Cache - Session storage and caching
  redis:
    image: redis:7-alpine
    container_name: tutuni_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - tutuni_network

  # ChromaDB - Vector database for RAG functionality
  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: tutuni_chromadb
    restart: unless-stopped
    environment:
      - CHROMA_HOST=0.0.0.0
      - CHROMA_PORT=8000
      - CHROMA_DB_IMPL=clickhouse
    ports:
      - "8001:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - tutuni_network

  # pgAdmin - Database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: tutuni_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@tutuni.ai
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tutuni_network
    profiles:
      - admin  # Optional service, enable with: docker-compose --profile admin up

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  chromadb_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  tutuni_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 